			STRINGS
	A group of characters define between double quotation marks is a
  string.But in c language the string is an array of characters and
  terminated by with null character (\0)

  decleration:-  char identifier[size];

  eg:-
  char st[20];

  Initialisation:-
  char identifier[size]="string";
		    |
		  optional

  eg:-
  char st[10]="string";
  char str[]= "bdps";

	when the compiler assigns a character string to a character array
  with automatically supplies a null character(\0) at the end of a string.
  Therefore the size should be equal to the maximum number of the characters
  in the string plus 1.

   The  string format  specifier is %s.

WRITE A PROGRAMME TO INITIALIZE A STRING AND DISPLAY?
#include<stdio.h>
#include<conio.h>

void main()
{
char st[90]="WELCOME";
char str[]="WELCOME TO BDPS";
clrscr();
printf(" st =%s",st);
printf("\nstr=%s",str);
getch();
}

gets:- It gets a string from stdin.
decleration:- char *gets(char *s);

puts:-It outputs a string to stdout and appends a new line character.
declearation:-int puts(const char *s);

WRITE A PROGRAMME TO ACCEPT A STRING FOR KEYBOARD AND DISPLAY USING
gets and puts?

#include<stdio.h>
#include<conio.h>
void main()
{
char st[90];
clrscr();
puts(" Enter any string  :");
gets(st);
puts("Given string       :");
puts(st);
getch();
}

getch:- gets a character from console but does not echo to the screen
decleration:- int getch();

getche:- gets a chracter from console and echoes to the screen.
decleration:- int getche();

#include<stdio.h>
#include<conio.h>
void main()
{
char ch;
clrscr();
printf(" Enter any character  :");
ch=getch();
   //ch=getche();
printf("\nGiven character         :%c",ch);
getch();
}

getchar:- It is a macro that gets a character from stdin.
delcleration:-  int getchar();

putchar:- It is a macro that outputs a character on stdout.
decleration:-   int putchar(int c);

#include<stdio.h>
#include<conio.h>
void main()
{
char ch;
clrscr();
printf(" Enter any character  :");
ch=getchar();
printf("Given character :");
putchar(ch);
getch();
}




STRING HANDLING FUNCTIONS
strlen:-It caliculates length of a string.
decleration:- size_t strlen(const char  *s);

#include<stdio.h>
#include<conio.h>
#include<string.h>
void main()
{
char st[90];
int len;
clrscr();
printf(" Enter any string  :");
gets(st);
len=strlen(st);

printf("Length of a  string  :%d",len);
getch();
}

COPY FROM ONE STRING TO ANOTHER:-

strcpy:- It copies from one string to another.
decleration:-  char *strcpy(char *dest,const char *src);

#include<stdio.h>
#include<conio.h>
#include<string.h>

void main()
{
char st1[80],st2[80];
clrscr();
printf(" Enter any string  :");
gets(st1);

strcpy(st2,st1);

printf("Given string     :%s",st1);
printf("\ncopied string  :%s",st2);
getch();
}

strrev:-
It reverses all characters in the given string except for the
terminating null.

decleration:-  char *strrev(char *s);

#include<stdio.h>
#include<conio.h>
#include<string.h>

void main()
{
char st[90];
clrscr();
printf(" Enter any string  :");
gets(st);
printf("Given string         :%s",st);
strrev(st);
printf("\nRiverse string     :%s",st);
getch();
}

strcat:-
It appends one string to another.
decleration:-   char *strcat(char *dest,const char *src);

Remarks:-
	strcat appends a copy of src to the end of dest.The length of the
	resulting string is

	strlen(dest)+strlen(src);

#include<stdio.h>
#include<conio.h>
#include<string.h>
void main()
{
char st1[90],st2[60];
clrscr();
printf(" Enter first string  :");
gets(st1);
printf(" Enter second string  :");
gets(st2);

strcat(st1,st2);
printf("Concatenation of two strings  :%s",st1);
getch();
}

strlwr:-
It converts upper case letters(A to Z) in the string to lower case(a to z)
decleration:- char *strlwr(char *s);

strupr:-
It converts lower case letters(a to Z) in the string to upper case(A to Z)
decleration:-  char *strupr(char *s);

#include<stdio.h>
#include<conio.h>
#include<string.h>

void main()
{
char st[90];
clrscr();
printf(" Enter any string      :");
gets(st);
printf("Given string           :%s",st);
strlwr(st);
printf("\nlower case string    :%s",st);
strupr(st);
printf("\n upper case string   :%s",st);
getch();
}

comparison:-

strcmp:-
It compares two strings with case sensitivity.
decleration:- int strcmp(const char *s1,const char *s2);

strcmpi:-
(a macro) compares two strings with out case sensitivity.
decleration:- int strcmpi(const char *s1,const char *s2);

stricmp:-
It compares two strings with out case sensitivity.
decleration:- int stricmp(const char *s1,const char *s2);

return value:-
These routines return an int value that is

	< 0 if s1<s2
	==0 if s1==s2
	> 0 if s1>s2

#include<stdio.h>
#include<conio.h>
#include<string.h>
void main()
{
char st1[60],st2[60];
int k;
clrscr();
printf(" Enter first string  :");
gets(st1);
printf(" Enter second string  :");
gets(st2);
k=strcmp(st1,st2);

//k=stricmp(st1,st2);
//k=strcmpi(st1,st2);

if(k==0)
printf("Two strings are equal ");
else if(k<0)
printf("First string less than second string ");
else
printf("First string is greater than second string ");
getch();
}

WRITE A PROGRAMME TO ACCEPT ANY STRING AND CHECK WHETHER THE GIVEN STRING
PALINDROME OR NOT?

#include<stdio.h>
#include<conio.h>
#include<string.h>
void main()
{
char st1[60],st2[60];
int k;
clrscr();
printf(" Enter any string  :");
gets(st1);

strcpy(st2,st1);
strrev(st2);
k=strcmp(st1,st2);
if(k==0)
printf("Given string is palindrome ");
else
printf("Given string is not palindrome ");
getch();
}

WRITE A PROGRAMME TO ACCEPT ANY STRING AND DISPLAY ITS CHARACTER FREQUENCY?

#include<stdio.h>
#include<conio.h>
#include<string.h>
void main()
{
char st[90];
int i;
static int a[256];
clrscr();
printf(" Enter any  string      :");
gets(st);


for(i=0;i<strlen(st);i++)
{
a[st[i]]=a[st[i]]+1;
}

printf("Char         Frequency");
printf("\n--------------------");
for(i=0;i<256;i++)
{
if(a[i]!=0)
{
printf("\n%c           %d",i,a[i]);
}
}
getch();
}

PASSWORD PROGRAMME:-

#include<stdio.h>
#include<conio.h>
#include<string.h>
void main()
{
 char st[40],ch;
 int i=0;
 clrscr();
 gotoxy(20,12);
 printf("Enter Password  :");
 while(1)
 {
  ch=getch();
  if(ch==13)
  break;

  if(ch==8)
  {
   if(i>0)
   {
    printf("\b%c\b",32);
    i--;
   }
  }
 else
 {
  st[i]=ch;
  i++;
  printf("%c",'*');
  }
 }
 st[i]='\0';
 gotoxy(20,20);
 printf("Given string   :%s",st);
 getch();
}


WRITE A PROGRAMME TO ACCEPT ANY STRING AND DROP ONE BY ONE CHARACTERS FROM
TOP TO BOTTOM?

#include<stdio.h>
#include<conio.h>
#include<string.h>
#include<process.h>
#include<dos.h>
void main()
{
  char st[80];
  int c,i,j;
  clrscr();
  textmode(2);
  printf("Enter any string:");
  gets(st);
  strupr(st);
  _setcursortype(_NOCURSOR);
  while(1)
  {
    clrscr();
    c=(80-strlen(st))/2;

    gotoxy(c,1);
    textcolor(GREEN);
    cprintf("%s",st);


    for(i=0;i<strlen(st);i++)
    {
      if(st[i]!=32)
      {
	for(j=2;j<=25;j++)
	{
	  if(kbhit())
	  exit(0);
	  gotoxy(c,j);
	  textcolor(GREEN);
	  cprintf("%c",st[i]);
	  gotoxy(c,j-1);
	  printf("%c",32);
	  delay(20);
	}
      }
      c++;
    }
  for(i=strlen(st)-1;i>=0;i--)
    {
      c--;
      if(st[i]!=32)
      {
	for(j=24;j>=1;j--)
	{
	  if(kbhit())
	  exit(0);
	  gotoxy(c,j);
	  textcolor(GREEN);
	  cprintf("%c",st[i]);
	  gotoxy(c,j+1);
	  printf("%c",32);
	  delay(20);
	}
      }
    }
  }
}


W.P. TO ACCEPT ANY STRING TO SCROLLING THE GIVEN STRING ON THE SCREEN
CENTRE?


#include<stdio.h>
#include<conio.h>
#include<dos.h>
#include<string.h>
void main()
{
  char st[80],ch;
  int i,c;
  clrscr();
  printf("Enter any string:");
  gets(st);
  strupr(st);
  strcat(st,"      ");
  textmode(1);
  clrscr();
  _setcursortype(_NOCURSOR);
  textcolor(RED);
  textbackground(GREEN);
  c=(40-strlen(st))/2;
  gotoxy(c,12);
  cprintf("%s",st);
  while(!kbhit())
  {
    ch=st[0];
    for(i=0;i<strlen(st);i++)
    {
      st[i]=st[i+1];
    }
    st[i-1]=ch;
    st[i]='\0';
    gotoxy(c,12);
    cprintf("%s",st);
    delay(80);
  }
  getch();
}



DROP ONE BY ONE WORD?



#include<stdio.h>
#include<conio.h>
#include<string.h>
#include<process.h>
#include<dos.h>
void main()
{
  char st[80],wd[80];
  int c,i,j,id=0;
  clrscr();
  textmode(2);
  printf("Enter any string:");
  gets(st);
  _setcursortype(_NOCURSOR);
  while(1)
  {
    clrscr();
    c=(80-strlen(st))/2;
    gotoxy(c,1);
    textcolor(BLUE);
    cprintf("%s",st);
    for(i=0;i<=strlen(st);i++)
    {
      wd[id]=st[i];
      id++;
      if((st[i]==32 && st[i+1]!=32)|| st[i]=='\0')
      {
      wd[id]='\0';
	for(j=2;j<=25;j++)
	{
	  if(kbhit())
	  exit(0);
	  gotoxy(c,j);
	  textcolor(BLUE);
	  cprintf("%s",wd);
	  gotoxy(c,j-1);
	  printf("%*c",strlen(wd),32);
	  delay(20);
	}
	c=c+strlen(wd);
	id=0;
	}
	}
	}
	}



basic 13:-


#include<stdio.h>
#include<conio.h>
#include<string.h>
#include<process.h>
#include<dos.h>
void main()
{
  char st[20];
  int i,r,c,k=150,length;
  clrscr();
  printf("Enter any string:");
  gets(st);
  strupr(st);

  _setcursortype(_NOCURSOR);
  length=strlen(st);
  while(!kbhit())
  {
  clrscr();
  c=40-(length/2*3);
  r=12;
  for(i=0;i<strlen(st);i++)
  {
  gotoxy(c,r);
  printf("%c",st[i]);
  c+=4;
  }
  delay(k);
  c=40-(length/2*2);
  r=12-(length/2);
  clrscr();
  for(i=0;i<strlen(st);i++)
  {
  gotoxy(c,r);
  printf("%c",st[i]);
  c+=3;
  r++;
  }
  delay(k);
  c=40+length/2;
  r=12-length/2;
  clrscr();
  for(i=0;i<strlen(st);i++)
  {
  gotoxy(c,r);
  printf("%c",st[i]);
  r++;
  }
  delay(k);
  c=40+(length/2*4);
  r=12-length/2;
  clrscr();
  for(i=0;i<strlen(st);i++)
  {
  gotoxy(c,r);
  printf("%c",st[i]);
  c-=3;
  r++;
  }
  delay(k);
  c=40+(length/2*5);
  r=12;
  clrscr();
  for(i=0;i<strlen(st);i++)
  {
  gotoxy(c,r);
  printf("%c",st[i]);
  c-=3;
  }
  delay(k);
  c=40+(length/2*4);
  r=12+length/2;
  clrscr();
  for(i=0;i<strlen(st);i++)
  {
  gotoxy(c,r);
  printf("%c",st[i]);
  c-=3;
  r--;
  }
  delay(k);
  c=40+length/2;
  r=12+length/2;
  clrscr();
  for(i=0;i<strlen(st);i++)
  {
  gotoxy(c,r);
  printf("%c",st[i]);
  r--;
  }
  delay(k);
  c=40+(length/2*2);
  r=12+length/2;
  clrscr();
  for(i=0;i<strlen(st);i++)
  {
  gotoxy(c,r);
  printf("%c",st[i]);
  c+=3;
  r--;
  }
  delay(k);
   }
  }




"STRING HANDLING FUNCTIONS(MANIPULATIONS)USING USER DEFINE FUNCTIONS"

STRING LENGTH:-


#include<stdio.h>
#include<conio.h>
int stringlen(char st[])
{
int i=0;
while(st[i]!='\0')
{
i++;
}
return i;
}
void main()
{
char st[90];
int len;
clrscr();
printf("Enter any string :");
gets(st);
len=stringlen(st);
printf("Length of given string :%d",len);
getch();
}


STRING COPY:-



#include<stdio.h>
#include<conio.h>
void stringcpy(char dest[],char src[])
{
int i;
for(i=0;src[i]!='\0';i++)
{
dest[i]=src[i];
}
dest[i]='\0';
}
void main()
{
char st1[90],st2[90];
clrscr();
printf("Enter any string :");
gets(st1);
stringcpy(st2,st1);
printf("Given string :%s",st1);
printf("\nCopied string :%s",st2);
getch();
}


STRING REVERSE:-

#include<stdio.h>
#include<conio.h>
void stringrev(char st[])
{
int i,j,len=0;
char t;
while(st[len]!='\0')
{
len++;
}
i=0;
j=len-1;
while(i<j)
{
t=st[i];
st[i]=st[j];
st[j]=t;
i++;
j--;
}
}
void main()
{
char st[90];
clrscr();
printf("Enter any string :");
gets(st);
printf("Given string :%s",st);
stringrev(st);
printf("\nCopied string :%s",st);
getch();
}


STRING CONCATENATION:-


#include<stdio.h>
#include<conio.h>
void stringcat(char dest[],char src[])
{
int i=0,j;
char t;
while(dest[i]!='\0')
{
i++;
}
for(j=0;src[j]!='\0';j++)
{
dest[i]=src[j];
i++;
}
dest[i]='\0';
}
void main()
{
char st1[90],st2[40];
clrscr();
printf("Enter first string :");
gets(st1);
printf("Enter second string :");
gets(st2);
stringcat(st1,st2);
printf("\nConcatenation of two strings :%s",st1);
getch();
}


STRING UPPER TO LOWER AND LOWER TO UPPER CASES:-

#include<stdio.h>
#include<conio.h>
void stringupr(char st[])
{
int i;
for(i=0;st[i]!='\0';i++)
{
if(st[i]>=97 && st[i]<=122)
st[i]=st[i]-32;
}
}

void stringlwr(char st[])
{
int i;
for(i=0;st[i]!='\0';i++)
{
if(st[i]>=65 && st[i]<=90)
st[i]=st[i]+32;
}
}

void main()
{
char st[80];
clrscr();
printf("Enter any string :");
gets(st);
printf("\nGiven string :%s",st);
stringlwr(st);
printf("\nGiven string in lower case :%s",st);
stringupr(st);
printf("\nGiven string in upper case :%s",st);
getch();
}



STRING COMPARISAN:-

#include<stdio.h>
#include<conio.h>
int stringcmp(char st1[],char st2[])
{
int i,k;
for(i=0;st1[i]!='\0';i++)
{
if(st1[i]!=st2[i])
break;
}
k=st1[i]-st2[i];
return k;
}

void main()
{
char st1[40],st2[80];
int k;
clrscr();
printf("Enter first string :");
gets(st1);
printf("\nEnter second string :");
gets(st2);
k=stringcmp(st1,st2);
if(k==0)
printf("Two strings are equal");
else if(k<0)
printf("First string is less than second string ");
else
printf("First string is greater than second string ");
getch();
}

STRING COMPARISON WITH OUT CASE CONSIDER:-

#include<stdio.h>
#include<conio.h>

int stringcmp(char st1[],char st2[])
{
char ch1,ch2;
int i,k;
for(i=0;st1[i]!='\0';i++)
{
ch1=st1[i];
ch2=st2[i];

if(ch1>=65 && ch1<=90)
ch1=ch1+32;
if(ch2>=65 && ch2<=90)
ch2=ch2+32;

if(ch1!=ch2)
break;
}

k=ch1-ch2;
return k;
}

void main()
{
char st1[80],st2[80];
int k;
clrscr();
printf("Enter first string :");
gets(st1);
printf("\nEnter second string :");
gets(st2);
k=stringcmp(st1,st2);
if(k==0)
printf("Two strings are equal");
else if (k<0)
printf("First string is less than second string ");
else
printf("First string is greater than second string ");
getch();
}

WRITE A PROGRAMME TO ACCEPT ANY STRING AND COUNT NUMBER OF CHARACTERS, NO
OF WORDS AND NO OF SPACES IN THE GIVEN STRING?

#include<stdio.h>
#include<conio.h>
void main()
{
char st[90];
int nc=0,nw=0,ns=0,i;
clrscr();
printf("Enter any string :");
gets(st);
for(i=0;i<=strlen(st);i++)
{
nc++;
if(st[i]==32||st[i]=='\0')
{
nw++;
nc--;
if(st[i]==32)
ns++;
}
}
printf("\n No of characters :%d",nc);
printf("\n No of spaces     :%d",ns);
printf("\n No of words      :%d",nw);
getch();
}



		 "TWO DIMENSIONAL CHARACTER ARRAYS"

	A list of names can be treated as a table of strings on a two
	dimensional character array can be used to store entire list.

       FOR EXAMPLE:-
       char st[5][20]may be used to store a list of 5 names each of length
       not more than 20 characters.

       INITIALIASATION:-

       char identifier [row size][col size]=
		       {"string-1","string-2",--------"string-n"};
       eg:-
       char st[5][10]={"WIPRO","INFOSYS","ORACLE","MICROSOFT","BDPS"};



#include<stdio.h>
#include<conio.h>
void main()
{
char st[5][10]={"WIPRO","INFOSYS","ORACLE","MICROSOFT","BDPS"};
int i;
clrscr();
for(i=0;i<5;i++)
{
printf("\n st[%d]=%s",i,st[i]);
}
getch();
}


W.A.P. TO ACCEPT A GROUP OF STRINGS FROM KEYBOARD AND DISPLAY?


#include<stdio.h>
#include<conio.h>
void main()
{
char st[20][20];
int i,n;
clrscr();
printf("Enter no of strings:");
scanf("%d",&n);
printf("Enter any %d strings  :",n);
fflush(stdin);
for(i=0;i<n;i++)
{
gets(st[i]);
}
printf("Given strings :\n");
for(i=0;i<n;i++)
{
puts(st[i]);
}
getch();
}


WRITE A PROGRAMME TO ACCEPT A GROUP STRINGS AND DISPLAY STRINGS IN
SORTED ORDER?




#include<stdio.h>
#include<conio.h>
#include<string.h>

void main()
{
char st[20][20],temp[20][20];
int i,j,n;
clrscr();
printf("Enter no of strings:");
scanf("%d",&n);
printf("Enter any %d strings  :",n);
fflush(stdin);
for(i=0;i<n;i++)
{
gets(st[i]);
}
clrscr();
printf("Given strings before sorting:");
for(i=0;i<n;i++)
{
puts(st[i]);
}
for(i=0;i<n-1;i++)
{
for(j=i+1;j<n;j++)
{
if(strcmp(st[i],st[j])>0)
{
strcpy(temp,st[i]);
strcpy(st[i],st[j]);
strcpy(st[j],temp);
}
}
}
printf("Given strings after sorting:");
for(i=0;i<n;i++)
{
puts(st[i]);
}

getch();
}
#include<stdio.h>
#include<conio.h>
void main()
{
char con[][20]={"INDIA","SRILANKA","USA","AUSTRALIA","CANADA","CHINA",
		 "JAPAN","FRANCE""SOUTH AFRICA","UK","GERMANY","CUBA",
		 "EGYPT"};


char cap[][20]={"NEW DELHI","COLOMBO","WASHINGTON","CANBERRA","OTTAWA",
		 "BEIGING","TOKYO","PARIS","CAPETOWN","LONDON","BONN",
		 "HAVANA","CAIRO"};

char cur[][20]={"RUPEE","RUPEE","DOLLAR","AUSTRALIAN DOLLAR","CANADA DOLLAR",
	       "YUVAN","YEN","FRANC","RAND","POUND","DAUTSCHEMARK","PESTO",
	       "POUND"};
char lan[][20]={"HINDI","SIMHALESE","ENGLISH","ENGLISH","ENGLISH","MANDARIN",
		"JAPANESE","FRENCH","AFRICAN","ENGLISH","GERMAN","SPANISH",
		"ARABIC"};

char cn[20],ch;
int i,ck;
do
{
ck=0;
clrscr();
printf("Enter country name:");
fflush(stdin);
gets(cn);
for(i=0;i<13;i++)
{
if(stricmp(cn,con[i])==0)
{
ck=1;
break;
}
}
if(ck==0)
printf("Country not found");
else
{
textmode(2);
textcolor(2);
cprintf("\nCAPITAL :%s",cap[i]);
printf("\nCURRENCY :%s",cur[i]);
cprintf("\nLANGAUGE :%s",lan[i]);
}
printf("\nDo u want to continuee......(y/n):");
fflush(stdin);
scanf("%c",&ch);
}while(ch!='n');
getch();
}



#include<stdio.h>
#include<conio.h>
void main()
{
char st[20][20]={"ZERO","ONE","TWO","THREE","FOUR","FIVE",
		 "SIX","SEVEN","EIGHT","NINE","TEN","ELEVEN","TWELVE","THIRTEEN",
		 "FOURTEEN","FIFTEEN","SIXTEEN","SEVENTEEN","EIGHTEEN",
		 "NINTEEN"};

char st1[20][20]={"  ","  ","TWENTY","THIRTY","FOURTY","FIFTY","SIXTY",
		 "SEVENTY","EIGHTY","NINTY"};

unsigned long n;
int r,d,ck=0;
char wd[80]="  ";
clrscr();
lb:
printf("Enter any number    ( <100000):");
scanf("%lu",&n);
if(n>=100000)
{
printf("Enter < 100000\n");
goto lb;
}
if(n>=1000 && n<100000)
{
r=n/1000;
if(r<20)
{
strcat(wd,st[r]);
strcat(wd,"  ");
}
else
{
d=r/10;
strcat(wd,st1[d]);
strcat(wd," ");
d=r%10;
if(d!=0)
{
strcat(wd,st[d]);
strcat(wd," ");
}
}
strcat(wd,"THOUSAND");
strcat(wd," ");
n=n%1000;
if(n==0)
ck=1;
}

if(n>100 && n<1000)
{
r=n/100;
strcat(wd,st[r]);
strcat(wd," ");
strcat(wd,"HUNDRED");
strcat(wd," ");
n=n%100;
if(n!=0)
{
strcat(wd,"AND");
strcat(wd," ");
}
else
{
ck=1;
}
}
if(n>=20 && n<100)
{
r=n/10;
strcat(wd,st1[r]);
strcat(wd," ");

n=n%10;
if(n==0)
ck=1;
}
if(ck==0)
{
if(n==0)
{
printf("%s",wd);
}
else
{
strcat(wd,st[n]);
printf("%s",wd);
}
}
getch();

}
